# This is a basic workflow to help you get started with Actions
 
name: pipeline1
 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
  workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      - uses: actions/checkout@v3
 
      - name: Run a one-line script
        run: echo Running build step
  test:
    runs-on: ubuntu-latest
    needs: build
 
    steps:
      - uses: actions/checkout@v3
 
      - name: Copy results
        run: echo "fake test step"
 
  publish:
    runs-on: ubuntu-latest
    needs: test
 
    steps:
    - name: ServiceNow DevOps Register Artifact
      uses: ServiceNow/servicenow-devops-register-artifact@v1.34.2
      with:
        devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
        devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        context-github: ${{ toJSON(github) }}
        job-name: 'publish'
        artifacts: '[{"name": "com:demo4","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
       
  deploy:
      name: Prod deploy
      needs: publish
      runs-on: ubuntu-latest
      steps:    
        - name: ServiceNow Change
          uses: ServiceNow/servicenow-devops-change@v1.38.0
          with:
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            context-github: ${{ toJSON(github) }}
            job-name: 'Deploy'
            change-request: ''
            interval: '100'
            timeout: '3600'
            changeCreationTimeOut: '3600'
            abortOnChangeCreationFailure: true
            abortOnChangeStepTimeout: true
 
